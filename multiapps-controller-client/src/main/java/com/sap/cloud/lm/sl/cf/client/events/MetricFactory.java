// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: metric.proto

package com.sap.cloud.lm.sl.cf.client.events;

public final class MetricFactory {
    private static final com.google.protobuf.Descriptors.Descriptor internal_static_events_ValueMetric_descriptor;
    private static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internal_static_events_ValueMetric_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor internal_static_events_CounterEvent_descriptor;
    private static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internal_static_events_CounterEvent_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor internal_static_events_ContainerMetric_descriptor;
    private static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internal_static_events_ContainerMetric_fieldAccessorTable;
    private static com.google.protobuf.Descriptors.FileDescriptor descriptor;

    static {
        java.lang.String[] descriptorData = { "\n\014metric.proto\022\006events\032\nuuid.proto\"8\n\013Va"
            + "lueMetric\022\014\n\004name\030\001 \002(\t\022\r\n\005value\030\002 \002(\001\022\014"
            + "\n\004unit\030\003 \002(\t\":\n\014CounterEvent\022\014\n\004name\030\001 \002"
            + "(\t\022\r\n\005delta\030\002 \002(\004\022\r\n\005total\030\003 \001(\004\"\260\001\n\017Con"
            + "tainerMetric\022\025\n\rapplicationId\030\001 \002(\t\022\025\n\ri"
            + "nstanceIndex\030\002 \002(\005\022\025\n\rcpuPercentage\030\003 \002("
            + "\001\022\023\n\013memoryBytes\030\004 \002(\004\022\021\n\tdiskBytes\030\005 \002("
            + "\004\022\030\n\020memoryBytesQuota\030\006 \001(\004\022\026\n\016diskBytes"
            + "Quota\030\007 \001(\004B2\n!org.cloudfoundry.dropsond" + "e.eventsB\rMetricFactory" };
        com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner = new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
            public com.google.protobuf.ExtensionRegistry assignDescriptors(com.google.protobuf.Descriptors.FileDescriptor root) {
                descriptor = root;
                return null;
            }
        };
        com.google.protobuf.Descriptors.FileDescriptor.internalBuildGeneratedFileFrom(descriptorData,
                                                                                      new com.google.protobuf.Descriptors.FileDescriptor[] {
                                                                                          UuidFactory.getDescriptor(), },
                                                                                      assigner);
        internal_static_events_ValueMetric_descriptor = getDescriptor().getMessageTypes()
                                                                       .get(0);
        internal_static_events_ValueMetric_fieldAccessorTable = new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(internal_static_events_ValueMetric_descriptor,
                                                                                                                              new java.lang.String[] {
                                                                                                                                  "Name",
                                                                                                                                  "Value",
                                                                                                                                  "Unit", });
        internal_static_events_CounterEvent_descriptor = getDescriptor().getMessageTypes()
                                                                        .get(1);
        internal_static_events_CounterEvent_fieldAccessorTable = new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(internal_static_events_CounterEvent_descriptor,
                                                                                                                               new java.lang.String[] {
                                                                                                                                   "Name",
                                                                                                                                   "Delta",
                                                                                                                                   "Total", });
        internal_static_events_ContainerMetric_descriptor = getDescriptor().getMessageTypes()
                                                                           .get(2);
        internal_static_events_ContainerMetric_fieldAccessorTable = new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(internal_static_events_ContainerMetric_descriptor,
                                                                                                                                  new java.lang.String[] {
                                                                                                                                      "ApplicationId",
                                                                                                                                      "InstanceIndex",
                                                                                                                                      "CpuPercentage",
                                                                                                                                      "MemoryBytes",
                                                                                                                                      "DiskBytes",
                                                                                                                                      "MemoryBytesQuota",
                                                                                                                                      "DiskBytesQuota", });
        UuidFactory.getDescriptor();
    }

    private MetricFactory() {
    }

    public static void registerAllExtensions(com.google.protobuf.ExtensionRegistryLite registry) {
    }

    public static void registerAllExtensions(com.google.protobuf.ExtensionRegistry registry) {
        registerAllExtensions((com.google.protobuf.ExtensionRegistryLite) registry);
    }

    public static com.google.protobuf.Descriptors.FileDescriptor getDescriptor() {
        return descriptor;
    }
    public interface ValueMetricOrBuilder extends
        // @@protoc_insertion_point(interface_extends:events.ValueMetric)
        com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         *&#47; Name of the metric. Must be consistent for downstream consumers to associate events semantically.
         * </pre>
         *
         * <code>required string name = 1;</code>
         */
        boolean hasName();

        /**
         * <pre>
         *&#47; Name of the metric. Must be consistent for downstream consumers to associate events semantically.
         * </pre>
         *
         * <code>required string name = 1;</code>
         */
        java.lang.String getName();

        /**
         * <pre>
         *&#47; Name of the metric. Must be consistent for downstream consumers to associate events semantically.
         * </pre>
         *
         * <code>required string name = 1;</code>
         */
        com.google.protobuf.ByteString getNameBytes();

        /**
         * <pre>
         *&#47; Value at the time of event emission.
         * </pre>
         *
         * <code>required double value = 2;</code>
         */
        boolean hasValue();

        /**
         * <pre>
         *&#47; Value at the time of event emission.
         * </pre>
         *
         * <code>required double value = 2;</code>
         */
        double getValue();

        /**
         * <pre>
         *&#47; Unit of the metric. Please see http://metrics20.org/spec/#units for ideas; SI units/prefixes are recommended where applicable. Should be consistent for the life of the metric (consumers are expected to report, but not interpret, prefixes).
         * </pre>
         *
         * <code>required string unit = 3;</code>
         */
        boolean hasUnit();

        /**
         * <pre>
         *&#47; Unit of the metric. Please see http://metrics20.org/spec/#units for ideas; SI units/prefixes are recommended where applicable. Should be consistent for the life of the metric (consumers are expected to report, but not interpret, prefixes).
         * </pre>
         *
         * <code>required string unit = 3;</code>
         */
        java.lang.String getUnit();

        /**
         * <pre>
         *&#47; Unit of the metric. Please see http://metrics20.org/spec/#units for ideas; SI units/prefixes are recommended where applicable. Should be consistent for the life of the metric (consumers are expected to report, but not interpret, prefixes).
         * </pre>
         *
         * <code>required string unit = 3;</code>
         */
        com.google.protobuf.ByteString getUnitBytes();
    }
    public interface CounterEventOrBuilder extends
        // @@protoc_insertion_point(interface_extends:events.CounterEvent)
        com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         *&#47; Name of the counter. Must be consistent for downstream consumers to associate events semantically.
         * </pre>
         *
         * <code>required string name = 1;</code>
         */
        boolean hasName();

        /**
         * <pre>
         *&#47; Name of the counter. Must be consistent for downstream consumers to associate events semantically.
         * </pre>
         *
         * <code>required string name = 1;</code>
         */
        java.lang.String getName();

        /**
         * <pre>
         *&#47; Name of the counter. Must be consistent for downstream consumers to associate events semantically.
         * </pre>
         *
         * <code>required string name = 1;</code>
         */
        com.google.protobuf.ByteString getNameBytes();

        /**
         * <pre>
         *&#47; Amount by which to increment the counter.
         * </pre>
         *
         * <code>required uint64 delta = 2;</code>
         */
        boolean hasDelta();

        /**
         * <pre>
         *&#47; Amount by which to increment the counter.
         * </pre>
         *
         * <code>required uint64 delta = 2;</code>
         */
        long getDelta();

        /**
         * <pre>
         *&#47; Total value of the counter. This will be overridden by Metron, which internally tracks the total of each named Counter it receives.
         * </pre>
         *
         * <code>optional uint64 total = 3;</code>
         */
        boolean hasTotal();

        /**
         * <pre>
         *&#47; Total value of the counter. This will be overridden by Metron, which internally tracks the total of each named Counter it receives.
         * </pre>
         *
         * <code>optional uint64 total = 3;</code>
         */
        long getTotal();
    }
    public interface ContainerMetricOrBuilder extends
        // @@protoc_insertion_point(interface_extends:events.ContainerMetric)
        com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         *&#47; ID of the contained application.
         * </pre>
         *
         * <code>required string applicationId = 1;</code>
         */
        boolean hasApplicationId();

        /**
         * <pre>
         *&#47; ID of the contained application.
         * </pre>
         *
         * <code>required string applicationId = 1;</code>
         */
        java.lang.String getApplicationId();

        /**
         * <pre>
         *&#47; ID of the contained application.
         * </pre>
         *
         * <code>required string applicationId = 1;</code>
         */
        com.google.protobuf.ByteString getApplicationIdBytes();

        /**
         * <pre>
         *&#47; Instance index of the contained application. (This, with applicationId, should uniquely identify a container.)
         * </pre>
         *
         * <code>required int32 instanceIndex = 2;</code>
         */
        boolean hasInstanceIndex();

        /**
         * <pre>
         *&#47; Instance index of the contained application. (This, with applicationId, should uniquely identify a container.)
         * </pre>
         *
         * <code>required int32 instanceIndex = 2;</code>
         */
        int getInstanceIndex();

        /**
         * <pre>
         *&#47; CPU used, on a scale of 0 to 100.
         * </pre>
         *
         * <code>required double cpuPercentage = 3;</code>
         */
        boolean hasCpuPercentage();

        /**
         * <pre>
         *&#47; CPU used, on a scale of 0 to 100.
         * </pre>
         *
         * <code>required double cpuPercentage = 3;</code>
         */
        double getCpuPercentage();

        /**
         * <pre>
         *&#47; Bytes of memory used.
         * </pre>
         *
         * <code>required uint64 memoryBytes = 4;</code>
         */
        boolean hasMemoryBytes();

        /**
         * <pre>
         *&#47; Bytes of memory used.
         * </pre>
         *
         * <code>required uint64 memoryBytes = 4;</code>
         */
        long getMemoryBytes();

        /**
         * <pre>
         *&#47; Bytes of disk used.
         * </pre>
         *
         * <code>required uint64 diskBytes = 5;</code>
         */
        boolean hasDiskBytes();

        /**
         * <pre>
         *&#47; Bytes of disk used.
         * </pre>
         *
         * <code>required uint64 diskBytes = 5;</code>
         */
        long getDiskBytes();

        /**
         * <pre>
         *&#47; Maximum bytes of memory allocated to container.
         * </pre>
         *
         * <code>optional uint64 memoryBytesQuota = 6;</code>
         */
        boolean hasMemoryBytesQuota();

        /**
         * <pre>
         *&#47; Maximum bytes of memory allocated to container.
         * </pre>
         *
         * <code>optional uint64 memoryBytesQuota = 6;</code>
         */
        long getMemoryBytesQuota();

        /**
         * <pre>
         *&#47; Maximum bytes of disk allocated to container.
         * </pre>
         *
         * <code>optional uint64 diskBytesQuota = 7;</code>
         */
        boolean hasDiskBytesQuota();

        /**
         * <pre>
         *&#47; Maximum bytes of disk allocated to container.
         * </pre>
         *
         * <code>optional uint64 diskBytesQuota = 7;</code>
         */
        long getDiskBytesQuota();
    }

    /**
     * <pre>
     *&#47; A ValueMetric indicates the value of a metric at an instant in time.
     * </pre>
     *
     * Protobuf type {@code events.ValueMetric}
     */
    public static final class ValueMetric extends com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:events.ValueMetric)
        ValueMetricOrBuilder {
        public static final int NAME_FIELD_NUMBER = 1;
        public static final int VALUE_FIELD_NUMBER = 2;
        public static final int UNIT_FIELD_NUMBER = 3;
        @java.lang.Deprecated
        public static final com.google.protobuf.Parser<ValueMetric> PARSER = new com.google.protobuf.AbstractParser<ValueMetric>() {
            public ValueMetric parsePartialFrom(com.google.protobuf.CodedInputStream input,
                                                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
                return new ValueMetric(input, extensionRegistry);
            }
        };
        private static final long serialVersionUID = 0L;
        // @@protoc_insertion_point(class_scope:events.ValueMetric)
        private static final MetricFactory.ValueMetric DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new MetricFactory.ValueMetric();
        }

        private int bitField0_;
        private volatile java.lang.Object name_;
        private double value_;
        private volatile java.lang.Object unit_;
        private byte memoizedIsInitialized = -1;

        // Use ValueMetric.newBuilder() to construct.
        private ValueMetric(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private ValueMetric() {
            name_ = "";
            value_ = 0D;
            unit_ = "";
        }

        private ValueMetric(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            bitField0_ |= 0x00000001;
                            name_ = bs;
                            break;
                        }
                        case 17: {
                            bitField0_ |= 0x00000002;
                            value_ = input.readDouble();
                            break;
                        }
                        case 26: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            bitField0_ |= 0x00000004;
                            unit_ = bs;
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
            return MetricFactory.internal_static_events_ValueMetric_descriptor;
        }

        public static MetricFactory.ValueMetric parseFrom(com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static MetricFactory.ValueMetric parseFrom(com.google.protobuf.ByteString data,
                                                          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static MetricFactory.ValueMetric parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static MetricFactory.ValueMetric parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static MetricFactory.ValueMetric parseFrom(java.io.InputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
        }

        public static MetricFactory.ValueMetric parseFrom(java.io.InputStream input,
                                                          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static MetricFactory.ValueMetric parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
        }

        public static MetricFactory.ValueMetric parseDelimitedFrom(java.io.InputStream input,
                                                                   com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static MetricFactory.ValueMetric parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
        }

        public static MetricFactory.ValueMetric parseFrom(com.google.protobuf.CodedInputStream input,
                                                          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(MetricFactory.ValueMetric prototype) {
            return DEFAULT_INSTANCE.toBuilder()
                                   .mergeFrom(prototype);
        }

        public static MetricFactory.ValueMetric getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static com.google.protobuf.Parser<ValueMetric> parser() {
            return PARSER;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return MetricFactory.internal_static_events_ValueMetric_fieldAccessorTable.ensureFieldAccessorsInitialized(MetricFactory.ValueMetric.class,
                                                                                                                       MetricFactory.ValueMetric.Builder.class);
        }

        /**
         * <pre>
         *&#47; Name of the metric. Must be consistent for downstream consumers to associate events semantically.
         * </pre>
         *
         * <code>required string name = 1;</code>
         */
        public boolean hasName() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <pre>
         *&#47; Name of the metric. Must be consistent for downstream consumers to associate events semantically.
         * </pre>
         *
         * <code>required string name = 1;</code>
         */
        public java.lang.String getName() {
            java.lang.Object ref = name_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    name_ = s;
                }
                return s;
            }
        }

        /**
         * <pre>
         *&#47; Name of the metric. Must be consistent for downstream consumers to associate events semantically.
         * </pre>
         *
         * <code>required string name = 1;</code>
         */
        public com.google.protobuf.ByteString getNameBytes() {
            java.lang.Object ref = name_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                name_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <pre>
         *&#47; Value at the time of event emission.
         * </pre>
         *
         * <code>required double value = 2;</code>
         */
        public boolean hasValue() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <pre>
         *&#47; Value at the time of event emission.
         * </pre>
         *
         * <code>required double value = 2;</code>
         */
        public double getValue() {
            return value_;
        }

        /**
         * <pre>
         *&#47; Unit of the metric. Please see http://metrics20.org/spec/#units for ideas; SI units/prefixes are recommended where applicable. Should be consistent for the life of the metric (consumers are expected to report, but not interpret, prefixes).
         * </pre>
         *
         * <code>required string unit = 3;</code>
         */
        public boolean hasUnit() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
        }

        /**
         * <pre>
         *&#47; Unit of the metric. Please see http://metrics20.org/spec/#units for ideas; SI units/prefixes are recommended where applicable. Should be consistent for the life of the metric (consumers are expected to report, but not interpret, prefixes).
         * </pre>
         *
         * <code>required string unit = 3;</code>
         */
        public java.lang.String getUnit() {
            java.lang.Object ref = unit_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    unit_ = s;
                }
                return s;
            }
        }

        /**
         * <pre>
         *&#47; Unit of the metric. Please see http://metrics20.org/spec/#units for ideas; SI units/prefixes are recommended where applicable. Should be consistent for the life of the metric (consumers are expected to report, but not interpret, prefixes).
         * </pre>
         *
         * <code>required string unit = 3;</code>
         */
        public com.google.protobuf.ByteString getUnitBytes() {
            java.lang.Object ref = unit_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                unit_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1)
                return true;
            if (isInitialized == 0)
                return false;

            if (!hasName()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!hasValue()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!hasUnit()) {
                memoizedIsInitialized = 0;
                return false;
            }
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeDouble(2, value_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 3, unit_);
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1)
                return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream.computeDoubleSize(2, value_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, unit_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof MetricFactory.ValueMetric)) {
                return super.equals(obj);
            }
            MetricFactory.ValueMetric other = (MetricFactory.ValueMetric) obj;

            boolean result = true;
            result = result && (hasName() == other.hasName());
            if (hasName()) {
                result = result && getName().equals(other.getName());
            }
            result = result && (hasValue() == other.hasValue());
            if (hasValue()) {
                result = result && (java.lang.Double.doubleToLongBits(getValue()) == java.lang.Double.doubleToLongBits(other.getValue()));
            }
            result = result && (hasUnit() == other.hasUnit());
            if (hasUnit()) {
                result = result && getUnit().equals(other.getUnit());
            }
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            if (hasName()) {
                hash = (37 * hash) + NAME_FIELD_NUMBER;
                hash = (53 * hash) + getName().hashCode();
            }
            if (hasValue()) {
                hash = (37 * hash) + VALUE_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(java.lang.Double.doubleToLongBits(getValue()));
            }
            if (hasUnit()) {
                hash = (37 * hash) + UNIT_FIELD_NUMBER;
                hash = (53 * hash) + getUnit().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<ValueMetric> getParserForType() {
            return PARSER;
        }

        public MetricFactory.ValueMetric getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

        /**
         * <pre>
         *&#47; A ValueMetric indicates the value of a metric at an instant in time.
         * </pre>
         *
         * Protobuf type {@code events.ValueMetric}
         */
        public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:events.ValueMetric)
            MetricFactory.ValueMetricOrBuilder {
            private int bitField0_;
            private java.lang.Object name_ = "";
            private double value_;
            private java.lang.Object unit_ = "";

            // Construct using MetricFactory.ValueMetric.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
                return MetricFactory.internal_static_events_ValueMetric_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                return MetricFactory.internal_static_events_ValueMetric_fieldAccessorTable.ensureFieldAccessorsInitialized(MetricFactory.ValueMetric.class,
                                                                                                                           MetricFactory.ValueMetric.Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
                }
            }

            public Builder clear() {
                super.clear();
                name_ = "";
                bitField0_ = (bitField0_ & ~0x00000001);
                value_ = 0D;
                bitField0_ = (bitField0_ & ~0x00000002);
                unit_ = "";
                bitField0_ = (bitField0_ & ~0x00000004);
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
                return MetricFactory.internal_static_events_ValueMetric_descriptor;
            }

            public MetricFactory.ValueMetric getDefaultInstanceForType() {
                return MetricFactory.ValueMetric.getDefaultInstance();
            }

            public MetricFactory.ValueMetric build() {
                MetricFactory.ValueMetric result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public MetricFactory.ValueMetric buildPartial() {
                MetricFactory.ValueMetric result = new MetricFactory.ValueMetric(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.name_ = name_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.value_ = value_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.unit_ = unit_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(com.google.protobuf.Descriptors.FieldDescriptor field, Object value) {
                return (Builder) super.setField(field, value);
            }

            public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }

            public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }

            public Builder setRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor field, int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor field, Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof MetricFactory.ValueMetric) {
                    return mergeFrom((MetricFactory.ValueMetric) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(MetricFactory.ValueMetric other) {
                if (other == MetricFactory.ValueMetric.getDefaultInstance())
                    return this;
                if (other.hasName()) {
                    bitField0_ |= 0x00000001;
                    name_ = other.name_;
                    onChanged();
                }
                if (other.hasValue()) {
                    setValue(other.getValue());
                }
                if (other.hasUnit()) {
                    bitField0_ |= 0x00000004;
                    unit_ = other.unit_;
                    onChanged();
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                if (!hasName()) {
                    return false;
                }
                if (!hasValue()) {
                    return false;
                }
                if (!hasUnit()) {
                    return false;
                }
                return true;
            }

            public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
                                     com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
                MetricFactory.ValueMetric parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (MetricFactory.ValueMetric) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            /**
             * <pre>
             *&#47; Name of the metric. Must be consistent for downstream consumers to associate events semantically.
             * </pre>
             *
             * <code>required string name = 1;</code>
             */
            public boolean hasName() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <pre>
             *&#47; Name of the metric. Must be consistent for downstream consumers to associate events semantically.
             * </pre>
             *
             * <code>required string name = 1;</code>
             */
            public java.lang.String getName() {
                java.lang.Object ref = name_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        name_ = s;
                    }
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <pre>
             *&#47; Name of the metric. Must be consistent for downstream consumers to associate events semantically.
             * </pre>
             *
             * <code>required string name = 1;</code>
             */
            public Builder setName(java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                name_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             *&#47; Name of the metric. Must be consistent for downstream consumers to associate events semantically.
             * </pre>
             *
             * <code>required string name = 1;</code>
             */
            public com.google.protobuf.ByteString getNameBytes() {
                java.lang.Object ref = name_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                    name_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             *&#47; Name of the metric. Must be consistent for downstream consumers to associate events semantically.
             * </pre>
             *
             * <code>required string name = 1;</code>
             */
            public Builder setNameBytes(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                name_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             *&#47; Name of the metric. Must be consistent for downstream consumers to associate events semantically.
             * </pre>
             *
             * <code>required string name = 1;</code>
             */
            public Builder clearName() {
                bitField0_ = (bitField0_ & ~0x00000001);
                name_ = getDefaultInstance().getName();
                onChanged();
                return this;
            }

            /**
             * <pre>
             *&#47; Value at the time of event emission.
             * </pre>
             *
             * <code>required double value = 2;</code>
             */
            public boolean hasValue() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <pre>
             *&#47; Value at the time of event emission.
             * </pre>
             *
             * <code>required double value = 2;</code>
             */
            public double getValue() {
                return value_;
            }

            /**
             * <pre>
             *&#47; Value at the time of event emission.
             * </pre>
             *
             * <code>required double value = 2;</code>
             */
            public Builder setValue(double value) {
                bitField0_ |= 0x00000002;
                value_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             *&#47; Value at the time of event emission.
             * </pre>
             *
             * <code>required double value = 2;</code>
             */
            public Builder clearValue() {
                bitField0_ = (bitField0_ & ~0x00000002);
                value_ = 0D;
                onChanged();
                return this;
            }

            /**
             * <pre>
             *&#47; Unit of the metric. Please see http://metrics20.org/spec/#units for ideas; SI units/prefixes are recommended where applicable. Should be consistent for the life of the metric (consumers are expected to report, but not interpret, prefixes).
             * </pre>
             *
             * <code>required string unit = 3;</code>
             */
            public boolean hasUnit() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
            }

            /**
             * <pre>
             *&#47; Unit of the metric. Please see http://metrics20.org/spec/#units for ideas; SI units/prefixes are recommended where applicable. Should be consistent for the life of the metric (consumers are expected to report, but not interpret, prefixes).
             * </pre>
             *
             * <code>required string unit = 3;</code>
             */
            public java.lang.String getUnit() {
                java.lang.Object ref = unit_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        unit_ = s;
                    }
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <pre>
             *&#47; Unit of the metric. Please see http://metrics20.org/spec/#units for ideas; SI units/prefixes are recommended where applicable. Should be consistent for the life of the metric (consumers are expected to report, but not interpret, prefixes).
             * </pre>
             *
             * <code>required string unit = 3;</code>
             */
            public Builder setUnit(java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000004;
                unit_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             *&#47; Unit of the metric. Please see http://metrics20.org/spec/#units for ideas; SI units/prefixes are recommended where applicable. Should be consistent for the life of the metric (consumers are expected to report, but not interpret, prefixes).
             * </pre>
             *
             * <code>required string unit = 3;</code>
             */
            public com.google.protobuf.ByteString getUnitBytes() {
                java.lang.Object ref = unit_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                    unit_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             *&#47; Unit of the metric. Please see http://metrics20.org/spec/#units for ideas; SI units/prefixes are recommended where applicable. Should be consistent for the life of the metric (consumers are expected to report, but not interpret, prefixes).
             * </pre>
             *
             * <code>required string unit = 3;</code>
             */
            public Builder setUnitBytes(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000004;
                unit_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             *&#47; Unit of the metric. Please see http://metrics20.org/spec/#units for ideas; SI units/prefixes are recommended where applicable. Should be consistent for the life of the metric (consumers are expected to report, but not interpret, prefixes).
             * </pre>
             *
             * <code>required string unit = 3;</code>
             */
            public Builder clearUnit() {
                bitField0_ = (bitField0_ & ~0x00000004);
                unit_ = getDefaultInstance().getUnit();
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFields(unknownFields);
            }

            public final Builder mergeUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }

            // @@protoc_insertion_point(builder_scope:events.ValueMetric)
        }

    }

    /**
     * <pre>
     *&#47; A CounterEvent represents the increment of a counter. It contains only the change in the value; it is the responsibility of downstream consumers to maintain the value of the counter.
     * </pre>
     *
     * Protobuf type {@code events.CounterEvent}
     */
    public static final class CounterEvent extends com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:events.CounterEvent)
        CounterEventOrBuilder {
        public static final int NAME_FIELD_NUMBER = 1;
        public static final int DELTA_FIELD_NUMBER = 2;
        public static final int TOTAL_FIELD_NUMBER = 3;
        @java.lang.Deprecated
        public static final com.google.protobuf.Parser<CounterEvent> PARSER = new com.google.protobuf.AbstractParser<CounterEvent>() {
            public CounterEvent parsePartialFrom(com.google.protobuf.CodedInputStream input,
                                                 com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
                return new CounterEvent(input, extensionRegistry);
            }
        };
        private static final long serialVersionUID = 0L;
        // @@protoc_insertion_point(class_scope:events.CounterEvent)
        private static final MetricFactory.CounterEvent DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new MetricFactory.CounterEvent();
        }

        private int bitField0_;
        private volatile java.lang.Object name_;
        private long delta_;
        private long total_;
        private byte memoizedIsInitialized = -1;

        // Use CounterEvent.newBuilder() to construct.
        private CounterEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private CounterEvent() {
            name_ = "";
            delta_ = 0L;
            total_ = 0L;
        }

        private CounterEvent(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            bitField0_ |= 0x00000001;
                            name_ = bs;
                            break;
                        }
                        case 16: {
                            bitField0_ |= 0x00000002;
                            delta_ = input.readUInt64();
                            break;
                        }
                        case 24: {
                            bitField0_ |= 0x00000004;
                            total_ = input.readUInt64();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
            return MetricFactory.internal_static_events_CounterEvent_descriptor;
        }

        public static MetricFactory.CounterEvent parseFrom(com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static MetricFactory.CounterEvent parseFrom(com.google.protobuf.ByteString data,
                                                           com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static MetricFactory.CounterEvent parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static MetricFactory.CounterEvent parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static MetricFactory.CounterEvent parseFrom(java.io.InputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
        }

        public static MetricFactory.CounterEvent parseFrom(java.io.InputStream input,
                                                           com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static MetricFactory.CounterEvent parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
        }

        public static MetricFactory.CounterEvent parseDelimitedFrom(java.io.InputStream input,
                                                                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static MetricFactory.CounterEvent parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
        }

        public static MetricFactory.CounterEvent parseFrom(com.google.protobuf.CodedInputStream input,
                                                           com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(MetricFactory.CounterEvent prototype) {
            return DEFAULT_INSTANCE.toBuilder()
                                   .mergeFrom(prototype);
        }

        public static MetricFactory.CounterEvent getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static com.google.protobuf.Parser<CounterEvent> parser() {
            return PARSER;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return MetricFactory.internal_static_events_CounterEvent_fieldAccessorTable.ensureFieldAccessorsInitialized(MetricFactory.CounterEvent.class,
                                                                                                                        MetricFactory.CounterEvent.Builder.class);
        }

        /**
         * <pre>
         *&#47; Name of the counter. Must be consistent for downstream consumers to associate events semantically.
         * </pre>
         *
         * <code>required string name = 1;</code>
         */
        public boolean hasName() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <pre>
         *&#47; Name of the counter. Must be consistent for downstream consumers to associate events semantically.
         * </pre>
         *
         * <code>required string name = 1;</code>
         */
        public java.lang.String getName() {
            java.lang.Object ref = name_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    name_ = s;
                }
                return s;
            }
        }

        /**
         * <pre>
         *&#47; Name of the counter. Must be consistent for downstream consumers to associate events semantically.
         * </pre>
         *
         * <code>required string name = 1;</code>
         */
        public com.google.protobuf.ByteString getNameBytes() {
            java.lang.Object ref = name_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                name_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <pre>
         *&#47; Amount by which to increment the counter.
         * </pre>
         *
         * <code>required uint64 delta = 2;</code>
         */
        public boolean hasDelta() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <pre>
         *&#47; Amount by which to increment the counter.
         * </pre>
         *
         * <code>required uint64 delta = 2;</code>
         */
        public long getDelta() {
            return delta_;
        }

        /**
         * <pre>
         *&#47; Total value of the counter. This will be overridden by Metron, which internally tracks the total of each named Counter it receives.
         * </pre>
         *
         * <code>optional uint64 total = 3;</code>
         */
        public boolean hasTotal() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
        }

        /**
         * <pre>
         *&#47; Total value of the counter. This will be overridden by Metron, which internally tracks the total of each named Counter it receives.
         * </pre>
         *
         * <code>optional uint64 total = 3;</code>
         */
        public long getTotal() {
            return total_;
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1)
                return true;
            if (isInitialized == 0)
                return false;

            if (!hasName()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!hasDelta()) {
                memoizedIsInitialized = 0;
                return false;
            }
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeUInt64(2, delta_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeUInt64(3, total_);
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1)
                return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream.computeUInt64Size(2, delta_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream.computeUInt64Size(3, total_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof MetricFactory.CounterEvent)) {
                return super.equals(obj);
            }
            MetricFactory.CounterEvent other = (MetricFactory.CounterEvent) obj;

            boolean result = true;
            result = result && (hasName() == other.hasName());
            if (hasName()) {
                result = result && getName().equals(other.getName());
            }
            result = result && (hasDelta() == other.hasDelta());
            if (hasDelta()) {
                result = result && (getDelta() == other.getDelta());
            }
            result = result && (hasTotal() == other.hasTotal());
            if (hasTotal()) {
                result = result && (getTotal() == other.getTotal());
            }
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            if (hasName()) {
                hash = (37 * hash) + NAME_FIELD_NUMBER;
                hash = (53 * hash) + getName().hashCode();
            }
            if (hasDelta()) {
                hash = (37 * hash) + DELTA_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getDelta());
            }
            if (hasTotal()) {
                hash = (37 * hash) + TOTAL_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getTotal());
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<CounterEvent> getParserForType() {
            return PARSER;
        }

        public MetricFactory.CounterEvent getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

        /**
         * <pre>
         *&#47; A CounterEvent represents the increment of a counter. It contains only the change in the value; it is the responsibility of downstream consumers to maintain the value of the counter.
         * </pre>
         *
         * Protobuf type {@code events.CounterEvent}
         */
        public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:events.CounterEvent)
            MetricFactory.CounterEventOrBuilder {
            private int bitField0_;
            private java.lang.Object name_ = "";
            private long delta_;
            private long total_;

            // Construct using MetricFactory.CounterEvent.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
                return MetricFactory.internal_static_events_CounterEvent_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                return MetricFactory.internal_static_events_CounterEvent_fieldAccessorTable.ensureFieldAccessorsInitialized(MetricFactory.CounterEvent.class,
                                                                                                                            MetricFactory.CounterEvent.Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
                }
            }

            public Builder clear() {
                super.clear();
                name_ = "";
                bitField0_ = (bitField0_ & ~0x00000001);
                delta_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000002);
                total_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000004);
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
                return MetricFactory.internal_static_events_CounterEvent_descriptor;
            }

            public MetricFactory.CounterEvent getDefaultInstanceForType() {
                return MetricFactory.CounterEvent.getDefaultInstance();
            }

            public MetricFactory.CounterEvent build() {
                MetricFactory.CounterEvent result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public MetricFactory.CounterEvent buildPartial() {
                MetricFactory.CounterEvent result = new MetricFactory.CounterEvent(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.name_ = name_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.delta_ = delta_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.total_ = total_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(com.google.protobuf.Descriptors.FieldDescriptor field, Object value) {
                return (Builder) super.setField(field, value);
            }

            public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }

            public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }

            public Builder setRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor field, int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor field, Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof MetricFactory.CounterEvent) {
                    return mergeFrom((MetricFactory.CounterEvent) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(MetricFactory.CounterEvent other) {
                if (other == MetricFactory.CounterEvent.getDefaultInstance())
                    return this;
                if (other.hasName()) {
                    bitField0_ |= 0x00000001;
                    name_ = other.name_;
                    onChanged();
                }
                if (other.hasDelta()) {
                    setDelta(other.getDelta());
                }
                if (other.hasTotal()) {
                    setTotal(other.getTotal());
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                if (!hasName()) {
                    return false;
                }
                if (!hasDelta()) {
                    return false;
                }
                return true;
            }

            public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
                                     com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
                MetricFactory.CounterEvent parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (MetricFactory.CounterEvent) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            /**
             * <pre>
             *&#47; Name of the counter. Must be consistent for downstream consumers to associate events semantically.
             * </pre>
             *
             * <code>required string name = 1;</code>
             */
            public boolean hasName() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <pre>
             *&#47; Name of the counter. Must be consistent for downstream consumers to associate events semantically.
             * </pre>
             *
             * <code>required string name = 1;</code>
             */
            public java.lang.String getName() {
                java.lang.Object ref = name_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        name_ = s;
                    }
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <pre>
             *&#47; Name of the counter. Must be consistent for downstream consumers to associate events semantically.
             * </pre>
             *
             * <code>required string name = 1;</code>
             */
            public Builder setName(java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                name_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             *&#47; Name of the counter. Must be consistent for downstream consumers to associate events semantically.
             * </pre>
             *
             * <code>required string name = 1;</code>
             */
            public com.google.protobuf.ByteString getNameBytes() {
                java.lang.Object ref = name_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                    name_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             *&#47; Name of the counter. Must be consistent for downstream consumers to associate events semantically.
             * </pre>
             *
             * <code>required string name = 1;</code>
             */
            public Builder setNameBytes(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                name_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             *&#47; Name of the counter. Must be consistent for downstream consumers to associate events semantically.
             * </pre>
             *
             * <code>required string name = 1;</code>
             */
            public Builder clearName() {
                bitField0_ = (bitField0_ & ~0x00000001);
                name_ = getDefaultInstance().getName();
                onChanged();
                return this;
            }

            /**
             * <pre>
             *&#47; Amount by which to increment the counter.
             * </pre>
             *
             * <code>required uint64 delta = 2;</code>
             */
            public boolean hasDelta() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <pre>
             *&#47; Amount by which to increment the counter.
             * </pre>
             *
             * <code>required uint64 delta = 2;</code>
             */
            public long getDelta() {
                return delta_;
            }

            /**
             * <pre>
             *&#47; Amount by which to increment the counter.
             * </pre>
             *
             * <code>required uint64 delta = 2;</code>
             */
            public Builder setDelta(long value) {
                bitField0_ |= 0x00000002;
                delta_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             *&#47; Amount by which to increment the counter.
             * </pre>
             *
             * <code>required uint64 delta = 2;</code>
             */
            public Builder clearDelta() {
                bitField0_ = (bitField0_ & ~0x00000002);
                delta_ = 0L;
                onChanged();
                return this;
            }

            /**
             * <pre>
             *&#47; Total value of the counter. This will be overridden by Metron, which internally tracks the total of each named Counter it receives.
             * </pre>
             *
             * <code>optional uint64 total = 3;</code>
             */
            public boolean hasTotal() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
            }

            /**
             * <pre>
             *&#47; Total value of the counter. This will be overridden by Metron, which internally tracks the total of each named Counter it receives.
             * </pre>
             *
             * <code>optional uint64 total = 3;</code>
             */
            public long getTotal() {
                return total_;
            }

            /**
             * <pre>
             *&#47; Total value of the counter. This will be overridden by Metron, which internally tracks the total of each named Counter it receives.
             * </pre>
             *
             * <code>optional uint64 total = 3;</code>
             */
            public Builder setTotal(long value) {
                bitField0_ |= 0x00000004;
                total_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             *&#47; Total value of the counter. This will be overridden by Metron, which internally tracks the total of each named Counter it receives.
             * </pre>
             *
             * <code>optional uint64 total = 3;</code>
             */
            public Builder clearTotal() {
                bitField0_ = (bitField0_ & ~0x00000004);
                total_ = 0L;
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFields(unknownFields);
            }

            public final Builder mergeUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }

            // @@protoc_insertion_point(builder_scope:events.CounterEvent)
        }

    }

    /**
     * <pre>
     *&#47; A ContainerMetric records resource usage of an app in a container.
     * </pre>
     *
     * Protobuf type {@code events.ContainerMetric}
     */
    public static final class ContainerMetric extends com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:events.ContainerMetric)
        ContainerMetricOrBuilder {
        public static final int APPLICATIONID_FIELD_NUMBER = 1;
        public static final int INSTANCEINDEX_FIELD_NUMBER = 2;
        public static final int CPUPERCENTAGE_FIELD_NUMBER = 3;
        public static final int MEMORYBYTES_FIELD_NUMBER = 4;
        public static final int DISKBYTES_FIELD_NUMBER = 5;
        public static final int MEMORYBYTESQUOTA_FIELD_NUMBER = 6;
        public static final int DISKBYTESQUOTA_FIELD_NUMBER = 7;
        @java.lang.Deprecated
        public static final com.google.protobuf.Parser<ContainerMetric> PARSER = new com.google.protobuf.AbstractParser<ContainerMetric>() {
            public ContainerMetric parsePartialFrom(com.google.protobuf.CodedInputStream input,
                                                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
                return new ContainerMetric(input, extensionRegistry);
            }
        };
        private static final long serialVersionUID = 0L;
        // @@protoc_insertion_point(class_scope:events.ContainerMetric)
        private static final MetricFactory.ContainerMetric DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new MetricFactory.ContainerMetric();
        }

        private int bitField0_;
        private volatile java.lang.Object applicationId_;
        private int instanceIndex_;
        private double cpuPercentage_;
        private long memoryBytes_;
        private long diskBytes_;
        private long memoryBytesQuota_;
        private long diskBytesQuota_;
        private byte memoizedIsInitialized = -1;

        // Use ContainerMetric.newBuilder() to construct.
        private ContainerMetric(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private ContainerMetric() {
            applicationId_ = "";
            instanceIndex_ = 0;
            cpuPercentage_ = 0D;
            memoryBytes_ = 0L;
            diskBytes_ = 0L;
            memoryBytesQuota_ = 0L;
            diskBytesQuota_ = 0L;
        }

        private ContainerMetric(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            bitField0_ |= 0x00000001;
                            applicationId_ = bs;
                            break;
                        }
                        case 16: {
                            bitField0_ |= 0x00000002;
                            instanceIndex_ = input.readInt32();
                            break;
                        }
                        case 25: {
                            bitField0_ |= 0x00000004;
                            cpuPercentage_ = input.readDouble();
                            break;
                        }
                        case 32: {
                            bitField0_ |= 0x00000008;
                            memoryBytes_ = input.readUInt64();
                            break;
                        }
                        case 40: {
                            bitField0_ |= 0x00000010;
                            diskBytes_ = input.readUInt64();
                            break;
                        }
                        case 48: {
                            bitField0_ |= 0x00000020;
                            memoryBytesQuota_ = input.readUInt64();
                            break;
                        }
                        case 56: {
                            bitField0_ |= 0x00000040;
                            diskBytesQuota_ = input.readUInt64();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
            return MetricFactory.internal_static_events_ContainerMetric_descriptor;
        }

        public static MetricFactory.ContainerMetric parseFrom(com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static MetricFactory.ContainerMetric parseFrom(com.google.protobuf.ByteString data,
                                                              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static MetricFactory.ContainerMetric parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static MetricFactory.ContainerMetric parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static MetricFactory.ContainerMetric parseFrom(java.io.InputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
        }

        public static MetricFactory.ContainerMetric parseFrom(java.io.InputStream input,
                                                              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static MetricFactory.ContainerMetric parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
        }

        public static MetricFactory.ContainerMetric parseDelimitedFrom(java.io.InputStream input,
                                                                       com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static MetricFactory.ContainerMetric parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
        }

        public static MetricFactory.ContainerMetric parseFrom(com.google.protobuf.CodedInputStream input,
                                                              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(MetricFactory.ContainerMetric prototype) {
            return DEFAULT_INSTANCE.toBuilder()
                                   .mergeFrom(prototype);
        }

        public static MetricFactory.ContainerMetric getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static com.google.protobuf.Parser<ContainerMetric> parser() {
            return PARSER;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return MetricFactory.internal_static_events_ContainerMetric_fieldAccessorTable.ensureFieldAccessorsInitialized(MetricFactory.ContainerMetric.class,
                                                                                                                           MetricFactory.ContainerMetric.Builder.class);
        }

        /**
         * <pre>
         *&#47; ID of the contained application.
         * </pre>
         *
         * <code>required string applicationId = 1;</code>
         */
        public boolean hasApplicationId() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <pre>
         *&#47; ID of the contained application.
         * </pre>
         *
         * <code>required string applicationId = 1;</code>
         */
        public java.lang.String getApplicationId() {
            java.lang.Object ref = applicationId_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    applicationId_ = s;
                }
                return s;
            }
        }

        /**
         * <pre>
         *&#47; ID of the contained application.
         * </pre>
         *
         * <code>required string applicationId = 1;</code>
         */
        public com.google.protobuf.ByteString getApplicationIdBytes() {
            java.lang.Object ref = applicationId_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                applicationId_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <pre>
         *&#47; Instance index of the contained application. (This, with applicationId, should uniquely identify a container.)
         * </pre>
         *
         * <code>required int32 instanceIndex = 2;</code>
         */
        public boolean hasInstanceIndex() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <pre>
         *&#47; Instance index of the contained application. (This, with applicationId, should uniquely identify a container.)
         * </pre>
         *
         * <code>required int32 instanceIndex = 2;</code>
         */
        public int getInstanceIndex() {
            return instanceIndex_;
        }

        /**
         * <pre>
         *&#47; CPU used, on a scale of 0 to 100.
         * </pre>
         *
         * <code>required double cpuPercentage = 3;</code>
         */
        public boolean hasCpuPercentage() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
        }

        /**
         * <pre>
         *&#47; CPU used, on a scale of 0 to 100.
         * </pre>
         *
         * <code>required double cpuPercentage = 3;</code>
         */
        public double getCpuPercentage() {
            return cpuPercentage_;
        }

        /**
         * <pre>
         *&#47; Bytes of memory used.
         * </pre>
         *
         * <code>required uint64 memoryBytes = 4;</code>
         */
        public boolean hasMemoryBytes() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
        }

        /**
         * <pre>
         *&#47; Bytes of memory used.
         * </pre>
         *
         * <code>required uint64 memoryBytes = 4;</code>
         */
        public long getMemoryBytes() {
            return memoryBytes_;
        }

        /**
         * <pre>
         *&#47; Bytes of disk used.
         * </pre>
         *
         * <code>required uint64 diskBytes = 5;</code>
         */
        public boolean hasDiskBytes() {
            return ((bitField0_ & 0x00000010) == 0x00000010);
        }

        /**
         * <pre>
         *&#47; Bytes of disk used.
         * </pre>
         *
         * <code>required uint64 diskBytes = 5;</code>
         */
        public long getDiskBytes() {
            return diskBytes_;
        }

        /**
         * <pre>
         *&#47; Maximum bytes of memory allocated to container.
         * </pre>
         *
         * <code>optional uint64 memoryBytesQuota = 6;</code>
         */
        public boolean hasMemoryBytesQuota() {
            return ((bitField0_ & 0x00000020) == 0x00000020);
        }

        /**
         * <pre>
         *&#47; Maximum bytes of memory allocated to container.
         * </pre>
         *
         * <code>optional uint64 memoryBytesQuota = 6;</code>
         */
        public long getMemoryBytesQuota() {
            return memoryBytesQuota_;
        }

        /**
         * <pre>
         *&#47; Maximum bytes of disk allocated to container.
         * </pre>
         *
         * <code>optional uint64 diskBytesQuota = 7;</code>
         */
        public boolean hasDiskBytesQuota() {
            return ((bitField0_ & 0x00000040) == 0x00000040);
        }

        /**
         * <pre>
         *&#47; Maximum bytes of disk allocated to container.
         * </pre>
         *
         * <code>optional uint64 diskBytesQuota = 7;</code>
         */
        public long getDiskBytesQuota() {
            return diskBytesQuota_;
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1)
                return true;
            if (isInitialized == 0)
                return false;

            if (!hasApplicationId()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!hasInstanceIndex()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!hasCpuPercentage()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!hasMemoryBytes()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!hasDiskBytes()) {
                memoizedIsInitialized = 0;
                return false;
            }
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 1, applicationId_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeInt32(2, instanceIndex_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeDouble(3, cpuPercentage_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                output.writeUInt64(4, memoryBytes_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                output.writeUInt64(5, diskBytes_);
            }
            if (((bitField0_ & 0x00000020) == 0x00000020)) {
                output.writeUInt64(6, memoryBytesQuota_);
            }
            if (((bitField0_ & 0x00000040) == 0x00000040)) {
                output.writeUInt64(7, diskBytesQuota_);
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1)
                return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, applicationId_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream.computeInt32Size(2, instanceIndex_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream.computeDoubleSize(3, cpuPercentage_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                size += com.google.protobuf.CodedOutputStream.computeUInt64Size(4, memoryBytes_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                size += com.google.protobuf.CodedOutputStream.computeUInt64Size(5, diskBytes_);
            }
            if (((bitField0_ & 0x00000020) == 0x00000020)) {
                size += com.google.protobuf.CodedOutputStream.computeUInt64Size(6, memoryBytesQuota_);
            }
            if (((bitField0_ & 0x00000040) == 0x00000040)) {
                size += com.google.protobuf.CodedOutputStream.computeUInt64Size(7, diskBytesQuota_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof MetricFactory.ContainerMetric)) {
                return super.equals(obj);
            }
            MetricFactory.ContainerMetric other = (MetricFactory.ContainerMetric) obj;

            boolean result = true;
            result = result && (hasApplicationId() == other.hasApplicationId());
            if (hasApplicationId()) {
                result = result && getApplicationId().equals(other.getApplicationId());
            }
            result = result && (hasInstanceIndex() == other.hasInstanceIndex());
            if (hasInstanceIndex()) {
                result = result && (getInstanceIndex() == other.getInstanceIndex());
            }
            result = result && (hasCpuPercentage() == other.hasCpuPercentage());
            if (hasCpuPercentage()) {
                result = result
                    && (java.lang.Double.doubleToLongBits(getCpuPercentage()) == java.lang.Double.doubleToLongBits(other.getCpuPercentage()));
            }
            result = result && (hasMemoryBytes() == other.hasMemoryBytes());
            if (hasMemoryBytes()) {
                result = result && (getMemoryBytes() == other.getMemoryBytes());
            }
            result = result && (hasDiskBytes() == other.hasDiskBytes());
            if (hasDiskBytes()) {
                result = result && (getDiskBytes() == other.getDiskBytes());
            }
            result = result && (hasMemoryBytesQuota() == other.hasMemoryBytesQuota());
            if (hasMemoryBytesQuota()) {
                result = result && (getMemoryBytesQuota() == other.getMemoryBytesQuota());
            }
            result = result && (hasDiskBytesQuota() == other.hasDiskBytesQuota());
            if (hasDiskBytesQuota()) {
                result = result && (getDiskBytesQuota() == other.getDiskBytesQuota());
            }
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            if (hasApplicationId()) {
                hash = (37 * hash) + APPLICATIONID_FIELD_NUMBER;
                hash = (53 * hash) + getApplicationId().hashCode();
            }
            if (hasInstanceIndex()) {
                hash = (37 * hash) + INSTANCEINDEX_FIELD_NUMBER;
                hash = (53 * hash) + getInstanceIndex();
            }
            if (hasCpuPercentage()) {
                hash = (37 * hash) + CPUPERCENTAGE_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(java.lang.Double.doubleToLongBits(getCpuPercentage()));
            }
            if (hasMemoryBytes()) {
                hash = (37 * hash) + MEMORYBYTES_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getMemoryBytes());
            }
            if (hasDiskBytes()) {
                hash = (37 * hash) + DISKBYTES_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getDiskBytes());
            }
            if (hasMemoryBytesQuota()) {
                hash = (37 * hash) + MEMORYBYTESQUOTA_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getMemoryBytesQuota());
            }
            if (hasDiskBytesQuota()) {
                hash = (37 * hash) + DISKBYTESQUOTA_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getDiskBytesQuota());
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<ContainerMetric> getParserForType() {
            return PARSER;
        }

        public MetricFactory.ContainerMetric getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

        /**
         * <pre>
         *&#47; A ContainerMetric records resource usage of an app in a container.
         * </pre>
         *
         * Protobuf type {@code events.ContainerMetric}
         */
        public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:events.ContainerMetric)
            MetricFactory.ContainerMetricOrBuilder {
            private int bitField0_;
            private java.lang.Object applicationId_ = "";
            private int instanceIndex_;
            private double cpuPercentage_;
            private long memoryBytes_;
            private long diskBytes_;
            private long memoryBytesQuota_;
            private long diskBytesQuota_;

            // Construct using MetricFactory.ContainerMetric.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
                return MetricFactory.internal_static_events_ContainerMetric_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                return MetricFactory.internal_static_events_ContainerMetric_fieldAccessorTable.ensureFieldAccessorsInitialized(MetricFactory.ContainerMetric.class,
                                                                                                                               MetricFactory.ContainerMetric.Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
                }
            }

            public Builder clear() {
                super.clear();
                applicationId_ = "";
                bitField0_ = (bitField0_ & ~0x00000001);
                instanceIndex_ = 0;
                bitField0_ = (bitField0_ & ~0x00000002);
                cpuPercentage_ = 0D;
                bitField0_ = (bitField0_ & ~0x00000004);
                memoryBytes_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000008);
                diskBytes_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000010);
                memoryBytesQuota_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000020);
                diskBytesQuota_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000040);
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
                return MetricFactory.internal_static_events_ContainerMetric_descriptor;
            }

            public MetricFactory.ContainerMetric getDefaultInstanceForType() {
                return MetricFactory.ContainerMetric.getDefaultInstance();
            }

            public MetricFactory.ContainerMetric build() {
                MetricFactory.ContainerMetric result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public MetricFactory.ContainerMetric buildPartial() {
                MetricFactory.ContainerMetric result = new MetricFactory.ContainerMetric(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.applicationId_ = applicationId_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.instanceIndex_ = instanceIndex_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.cpuPercentage_ = cpuPercentage_;
                if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                    to_bitField0_ |= 0x00000008;
                }
                result.memoryBytes_ = memoryBytes_;
                if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
                    to_bitField0_ |= 0x00000010;
                }
                result.diskBytes_ = diskBytes_;
                if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
                    to_bitField0_ |= 0x00000020;
                }
                result.memoryBytesQuota_ = memoryBytesQuota_;
                if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
                    to_bitField0_ |= 0x00000040;
                }
                result.diskBytesQuota_ = diskBytesQuota_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(com.google.protobuf.Descriptors.FieldDescriptor field, Object value) {
                return (Builder) super.setField(field, value);
            }

            public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }

            public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }

            public Builder setRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor field, int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor field, Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof MetricFactory.ContainerMetric) {
                    return mergeFrom((MetricFactory.ContainerMetric) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(MetricFactory.ContainerMetric other) {
                if (other == MetricFactory.ContainerMetric.getDefaultInstance())
                    return this;
                if (other.hasApplicationId()) {
                    bitField0_ |= 0x00000001;
                    applicationId_ = other.applicationId_;
                    onChanged();
                }
                if (other.hasInstanceIndex()) {
                    setInstanceIndex(other.getInstanceIndex());
                }
                if (other.hasCpuPercentage()) {
                    setCpuPercentage(other.getCpuPercentage());
                }
                if (other.hasMemoryBytes()) {
                    setMemoryBytes(other.getMemoryBytes());
                }
                if (other.hasDiskBytes()) {
                    setDiskBytes(other.getDiskBytes());
                }
                if (other.hasMemoryBytesQuota()) {
                    setMemoryBytesQuota(other.getMemoryBytesQuota());
                }
                if (other.hasDiskBytesQuota()) {
                    setDiskBytesQuota(other.getDiskBytesQuota());
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                if (!hasApplicationId()) {
                    return false;
                }
                if (!hasInstanceIndex()) {
                    return false;
                }
                if (!hasCpuPercentage()) {
                    return false;
                }
                if (!hasMemoryBytes()) {
                    return false;
                }
                if (!hasDiskBytes()) {
                    return false;
                }
                return true;
            }

            public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
                                     com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
                MetricFactory.ContainerMetric parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (MetricFactory.ContainerMetric) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            /**
             * <pre>
             *&#47; ID of the contained application.
             * </pre>
             *
             * <code>required string applicationId = 1;</code>
             */
            public boolean hasApplicationId() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <pre>
             *&#47; ID of the contained application.
             * </pre>
             *
             * <code>required string applicationId = 1;</code>
             */
            public java.lang.String getApplicationId() {
                java.lang.Object ref = applicationId_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        applicationId_ = s;
                    }
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <pre>
             *&#47; ID of the contained application.
             * </pre>
             *
             * <code>required string applicationId = 1;</code>
             */
            public Builder setApplicationId(java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                applicationId_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             *&#47; ID of the contained application.
             * </pre>
             *
             * <code>required string applicationId = 1;</code>
             */
            public com.google.protobuf.ByteString getApplicationIdBytes() {
                java.lang.Object ref = applicationId_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                    applicationId_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             *&#47; ID of the contained application.
             * </pre>
             *
             * <code>required string applicationId = 1;</code>
             */
            public Builder setApplicationIdBytes(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                applicationId_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             *&#47; ID of the contained application.
             * </pre>
             *
             * <code>required string applicationId = 1;</code>
             */
            public Builder clearApplicationId() {
                bitField0_ = (bitField0_ & ~0x00000001);
                applicationId_ = getDefaultInstance().getApplicationId();
                onChanged();
                return this;
            }

            /**
             * <pre>
             *&#47; Instance index of the contained application. (This, with applicationId, should uniquely identify a container.)
             * </pre>
             *
             * <code>required int32 instanceIndex = 2;</code>
             */
            public boolean hasInstanceIndex() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <pre>
             *&#47; Instance index of the contained application. (This, with applicationId, should uniquely identify a container.)
             * </pre>
             *
             * <code>required int32 instanceIndex = 2;</code>
             */
            public int getInstanceIndex() {
                return instanceIndex_;
            }

            /**
             * <pre>
             *&#47; Instance index of the contained application. (This, with applicationId, should uniquely identify a container.)
             * </pre>
             *
             * <code>required int32 instanceIndex = 2;</code>
             */
            public Builder setInstanceIndex(int value) {
                bitField0_ |= 0x00000002;
                instanceIndex_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             *&#47; Instance index of the contained application. (This, with applicationId, should uniquely identify a container.)
             * </pre>
             *
             * <code>required int32 instanceIndex = 2;</code>
             */
            public Builder clearInstanceIndex() {
                bitField0_ = (bitField0_ & ~0x00000002);
                instanceIndex_ = 0;
                onChanged();
                return this;
            }

            /**
             * <pre>
             *&#47; CPU used, on a scale of 0 to 100.
             * </pre>
             *
             * <code>required double cpuPercentage = 3;</code>
             */
            public boolean hasCpuPercentage() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
            }

            /**
             * <pre>
             *&#47; CPU used, on a scale of 0 to 100.
             * </pre>
             *
             * <code>required double cpuPercentage = 3;</code>
             */
            public double getCpuPercentage() {
                return cpuPercentage_;
            }

            /**
             * <pre>
             *&#47; CPU used, on a scale of 0 to 100.
             * </pre>
             *
             * <code>required double cpuPercentage = 3;</code>
             */
            public Builder setCpuPercentage(double value) {
                bitField0_ |= 0x00000004;
                cpuPercentage_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             *&#47; CPU used, on a scale of 0 to 100.
             * </pre>
             *
             * <code>required double cpuPercentage = 3;</code>
             */
            public Builder clearCpuPercentage() {
                bitField0_ = (bitField0_ & ~0x00000004);
                cpuPercentage_ = 0D;
                onChanged();
                return this;
            }

            /**
             * <pre>
             *&#47; Bytes of memory used.
             * </pre>
             *
             * <code>required uint64 memoryBytes = 4;</code>
             */
            public boolean hasMemoryBytes() {
                return ((bitField0_ & 0x00000008) == 0x00000008);
            }

            /**
             * <pre>
             *&#47; Bytes of memory used.
             * </pre>
             *
             * <code>required uint64 memoryBytes = 4;</code>
             */
            public long getMemoryBytes() {
                return memoryBytes_;
            }

            /**
             * <pre>
             *&#47; Bytes of memory used.
             * </pre>
             *
             * <code>required uint64 memoryBytes = 4;</code>
             */
            public Builder setMemoryBytes(long value) {
                bitField0_ |= 0x00000008;
                memoryBytes_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             *&#47; Bytes of memory used.
             * </pre>
             *
             * <code>required uint64 memoryBytes = 4;</code>
             */
            public Builder clearMemoryBytes() {
                bitField0_ = (bitField0_ & ~0x00000008);
                memoryBytes_ = 0L;
                onChanged();
                return this;
            }

            /**
             * <pre>
             *&#47; Bytes of disk used.
             * </pre>
             *
             * <code>required uint64 diskBytes = 5;</code>
             */
            public boolean hasDiskBytes() {
                return ((bitField0_ & 0x00000010) == 0x00000010);
            }

            /**
             * <pre>
             *&#47; Bytes of disk used.
             * </pre>
             *
             * <code>required uint64 diskBytes = 5;</code>
             */
            public long getDiskBytes() {
                return diskBytes_;
            }

            /**
             * <pre>
             *&#47; Bytes of disk used.
             * </pre>
             *
             * <code>required uint64 diskBytes = 5;</code>
             */
            public Builder setDiskBytes(long value) {
                bitField0_ |= 0x00000010;
                diskBytes_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             *&#47; Bytes of disk used.
             * </pre>
             *
             * <code>required uint64 diskBytes = 5;</code>
             */
            public Builder clearDiskBytes() {
                bitField0_ = (bitField0_ & ~0x00000010);
                diskBytes_ = 0L;
                onChanged();
                return this;
            }

            /**
             * <pre>
             *&#47; Maximum bytes of memory allocated to container.
             * </pre>
             *
             * <code>optional uint64 memoryBytesQuota = 6;</code>
             */
            public boolean hasMemoryBytesQuota() {
                return ((bitField0_ & 0x00000020) == 0x00000020);
            }

            /**
             * <pre>
             *&#47; Maximum bytes of memory allocated to container.
             * </pre>
             *
             * <code>optional uint64 memoryBytesQuota = 6;</code>
             */
            public long getMemoryBytesQuota() {
                return memoryBytesQuota_;
            }

            /**
             * <pre>
             *&#47; Maximum bytes of memory allocated to container.
             * </pre>
             *
             * <code>optional uint64 memoryBytesQuota = 6;</code>
             */
            public Builder setMemoryBytesQuota(long value) {
                bitField0_ |= 0x00000020;
                memoryBytesQuota_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             *&#47; Maximum bytes of memory allocated to container.
             * </pre>
             *
             * <code>optional uint64 memoryBytesQuota = 6;</code>
             */
            public Builder clearMemoryBytesQuota() {
                bitField0_ = (bitField0_ & ~0x00000020);
                memoryBytesQuota_ = 0L;
                onChanged();
                return this;
            }

            /**
             * <pre>
             *&#47; Maximum bytes of disk allocated to container.
             * </pre>
             *
             * <code>optional uint64 diskBytesQuota = 7;</code>
             */
            public boolean hasDiskBytesQuota() {
                return ((bitField0_ & 0x00000040) == 0x00000040);
            }

            /**
             * <pre>
             *&#47; Maximum bytes of disk allocated to container.
             * </pre>
             *
             * <code>optional uint64 diskBytesQuota = 7;</code>
             */
            public long getDiskBytesQuota() {
                return diskBytesQuota_;
            }

            /**
             * <pre>
             *&#47; Maximum bytes of disk allocated to container.
             * </pre>
             *
             * <code>optional uint64 diskBytesQuota = 7;</code>
             */
            public Builder setDiskBytesQuota(long value) {
                bitField0_ |= 0x00000040;
                diskBytesQuota_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             *&#47; Maximum bytes of disk allocated to container.
             * </pre>
             *
             * <code>optional uint64 diskBytesQuota = 7;</code>
             */
            public Builder clearDiskBytesQuota() {
                bitField0_ = (bitField0_ & ~0x00000040);
                diskBytesQuota_ = 0L;
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFields(unknownFields);
            }

            public final Builder mergeUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }

            // @@protoc_insertion_point(builder_scope:events.ContainerMetric)
        }

    }

    // @@protoc_insertion_point(outer_class_scope)
}
