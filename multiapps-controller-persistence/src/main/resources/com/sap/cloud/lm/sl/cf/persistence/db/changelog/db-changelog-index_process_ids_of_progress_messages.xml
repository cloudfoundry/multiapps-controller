<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
    logicalFilePath="com/sap/cloud/lm/sl/persistence/db/changelog/db-changelog-index_process_ids_of_progress_messages.xml"
    xmlns="http://www.liquibase.org/xml/ns/dbchangelog/1.9" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog/1.9
                      http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-1.9.xsd">

    <changeSet author="sap.com" id="index_process_ids_of_progress_messages">
        <preConditions onFail="MARK_RAN">
            <!-- PostgreSQL supports concurrent creation of indices, but Liquibase does not, which is why the change for 
                PostgreSQL is implemented as an AsyncChange. See com.sap.cloud.lm.sl.cf.persistence.changes.IndexProcessIdsOfProgressMessagesPostgreSQLChange. -->
            <not>
                <dbms type="postgresql" />
            </not>
        </preConditions>
        <createIndex tableName="progress_message" indexName="idx_progress_message_process_id">
            <column name="process_id" />
        </createIndex>
    </changeSet>

    <!-- Task extensions are still progress messages, which is why this change set is here. -->
    <changeSet author="sap.com" id="index_process_ids_of_task_extensions">
        <!-- It is extremely unlikely that there's a lot of data in this table, so there's no need to create the index concurrently 
            even on databases that support concurrent creation. -->
        <createIndex tableName="task_extension" indexName="idx_task_extension_process_id">
            <column name="process_id" />
        </createIndex>
    </changeSet>

</databaseChangeLog>
