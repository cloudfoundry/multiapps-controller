package com.sap.cloud.lm.sl.cf.web.util;

import static org.junit.Assert.assertTrue;

import java.nio.charset.StandardCharsets;

import org.junit.Assert;
import org.junit.Test;

public class CompressUtilTest {

    private static final String TOKEN_STRING = "eyJhbGciOiJSUzI1NiJ9.eyJqdGkiOiJhYzUyMGE4Ni1kYjFmLTQyZDUtOGViOC1mODJhNzY2MmJiODAiLCJzdWIiOiIxNTQ4NTYiLCJzY29wZSI6WyJjbG91ZF9jb250cm9sbGVyLnJlYWQiLCJjbG91ZF9jb250cm9sbGVyLndyaXRlIiwiY2xvdWRfY29udHJvbGxlci5hZG1pbiIsInVhYS51c2VyIl0sImNsaWVudF9pZCI6ImNmIiwiY2lkIjoiY2YiLCJhenAiOiJjZiIsImdyYW50X3R5cGUiOiJwYXNzd29yZCIsInVzZXJfaWQiOiIxNTQ4NTYiLCJ1c2VyX25hbWUiOiJYU01BU1RFUiIsImVtYWlsIjoiWFNNQVNURVJAdW5rbm93biIsImZhbWlseV9uYW1lIjoiWFNNQVNURVIiLCJpYXQiOjE0NDU0NDQzODcsImV4cCI6MTQ0NTQ4NzU4NywiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo4MDgwL3VhYS9vYXV0aC90b2tlbiIsInppZCI6InVhYSIsImhkYi5uYW1lZHVzZXIuc2FtbCI6Ijw_eG1sIHZlcnNpb249XCIxLjBcIiBlbmNvZGluZz1cIlVURi04XCI_PjxzYW1sMjpBc3NlcnRpb24geG1sbnM6c2FtbDI9XCJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXNzZXJ0aW9uXCIgSUQ9XCJfNTFhYTMxY2EtODA5My00ZjMzLThlMzAtMzE2MzA5M2I5OWQ3XCIgSXNzdWVJbnN0YW50PVwiMjAxNS0xMC0yMVQxNjoxNDo0Ny41MDdaXCIgVmVyc2lvbj1cIjIuMFwiPjxzYW1sMjpJc3N1ZXI-WFNBLXNhbWw8L3NhbWwyOklzc3Vlcj48ZHM6U2lnbmF0dXJlIHhtbG5zOmRzPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnI1wiPjxkczpTaWduZWRJbmZvPjxkczpDYW5vbmljYWxpemF0aW9uTWV0aG9kIEFsZ29yaXRobT1cImh0dHA6Ly93d3cudzMub3JnLzIwMDEvMTAveG1sLWV4Yy1jMTRuI1wiLz48ZHM6U2lnbmF0dXJlTWV0aG9kIEFsZ29yaXRobT1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyNyc2Etc2hhMVwiLz48ZHM6UmVmZXJlbmNlIFVSST1cIiNfNTFhYTMxY2EtODA5My00ZjMzLThlMzAtMzE2MzA5M2I5OWQ3XCI-PGRzOlRyYW5zZm9ybXM-PGRzOlRyYW5zZm9ybSBBbGdvcml0aG09XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVyZVwiLz48ZHM6VHJhbnNmb3JtIEFsZ29yaXRobT1cImh0dHA6Ly93d3cudzMub3JnLzIwMDEvMTAveG1sLWV4Yy1jMTRuI1wiLz48L2RzOlRyYW5zZm9ybXM-PGRzOkRpZ2VzdE1ldGhvZCBBbGdvcml0aG09XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjc2hhMVwiLz48ZHM6RGlnZXN0VmFsdWU-T1VjMmRnWWhiamZaREFySnkyMFhYN0Y5YWhVPTwvZHM6RGlnZXN0VmFsdWU-PC9kczpSZWZlcmVuY2U-PC9kczpTaWduZWRJbmZvPjxkczpTaWduYXR1cmVWYWx1ZT5HTTEyb3BxSjJxOUR6NUFpbXhRQTNGWmtTL0UreXRlYWxrYk9vRjlWTEdNaldmbGlKdEQwQWZkdkVBRjUvMkUrWlU5U1dzVVZyd2puL0JZcjlTR05Cc3VjRVRXOTZWYnNSMGVpb28rSWZaeUlrQlJkaEk3cm9XWXAvVnd6ZlJkSDZmdEVlbVV4bEVhLzFZZGhLM0gxVldYSEJDNjMvcFN5YVVOeG51bzRwOENaQTNBdzZ3MUpWRlpEbm1Yd1BxZmEyQTFUdlk0K1RpcStRNWZXVkZiQ0RmdVVoejk5TjdYeWs3VmxLRytpRktmdHRPbUJxN2hLZDQvK0x6L2cvQ3ZCNVkzVTEreG5abUxuVFVRUEdJdjNTM2lkSWlTakxhK2NRQUN1Q0d5a0FsY0txQUlGNTZVZjNCdGFZdzY4aG9lSUpDLytrOXhZbnFUWjVUUElpc2JlUmc9PTwvZHM6U2lnbmF0dXJlVmFsdWU-PC9kczpTaWduYXR1cmU-PHNhbWwyOlN1YmplY3Q-PHNhbWwyOk5hbWVJRCBGb3JtYXQ9XCJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoxLjE6bmFtZWlkLWZvcm1hdDp1bnNwZWNpZmllZFwiPlhTTUFTVEVSPC9zYW1sMjpOYW1lSUQ-PHNhbWwyOlN1YmplY3RDb25maXJtYXRpb24gTWV0aG9kPVwidXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmNtOmJlYXJlclwiPjxzYW1sMjpTdWJqZWN0Q29uZmlybWF0aW9uRGF0YSBOb3RPbk9yQWZ0ZXI9XCIyMDE1LTEwLTIxVDIwOjE5OjQ3LjUwN1pcIi8-PC9zYW1sMjpTdWJqZWN0Q29uZmlybWF0aW9uPjwvc2FtbDI6U3ViamVjdD48c2FtbDI6Q29uZGl0aW9ucyBOb3RCZWZvcmU9XCIyMDE1LTEwLTIxVDE2OjE0OjQ3LjUwN1pcIiBOb3RPbk9yQWZ0ZXI9XCIyMDE1LTEwLTIxVDIwOjE5OjQ3LjUwN1pcIi8-PHNhbWwyOkF1dGhuU3RhdGVtZW50IEF1dGhuSW5zdGFudD1cIjIwMTUtMTAtMjFUMTY6MTk6NDcuNTA3WlwiIFNlc3Npb25Ob3RPbk9yQWZ0ZXI9XCIyMDE1LTEwLTIxVDE2OjI0OjQ3LjUwN1pcIj48c2FtbDI6QXV0aG5Db250ZXh0PjxzYW1sMjpBdXRobkNvbnRleHRDbGFzc1JlZj51cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YWM6Y2xhc3NlczpQYXNzd29yZDwvc2FtbDI6QXV0aG5Db250ZXh0Q2xhc3NSZWY-PC9zYW1sMjpBdXRobkNvbnRleHQ-PC9zYW1sMjpBdXRoblN0YXRlbWVudD48L3NhbWwyOkFzc2VydGlvbj4iLCJ4cy51c2VyLmF0dHJpYnV0ZXMiOnt9LCJhdWQiOlsiY2YiLCJjbG91ZF9jb250cm9sbGVyIiwidWFhIl19.M-fi0avaTY8LB5wI7-8VrT_SPtL3VciXZhNdaBMVpCBlMPdyoHR5qHgHhfsMdTlNPyf7Jz74yzZIcA2WHdju88Hucjdi_S0OOn4Oy3OPArSFyIYkyGhOHw-jdZeeSK5Fn9W7FsF6OyZCpx9ZLnvrgPx_ZulneQv_WOzxStsLsb6tzCrt6qJXXILi-d7D5b6KpQ7WnyNnSNYtkdlpPKsxzkUWOBI2NiaG6HPAu0m-BIS0yJVuosM9MOPlmLsiCx_0Sj45no6hp8mWCVm4ZJArpSLuVOwlAhnYzTzXWyTON7DyCb46-66mQ6PtGS92wg7D1S8GGviekjeidXEEPYoQtA";

    private byte[] originalBytes = TOKEN_STRING.getBytes(StandardCharsets.UTF_8);

    @Test
    public void test() throws Exception {
        byte[] compressedBytes = CompressUtil.compress(originalBytes);
        assertTrue(compressedBytes.length < originalBytes.length);

        byte[] decompressedBytes = CompressUtil.decompress(compressedBytes);
        Assert.assertArrayEquals(originalBytes, decompressedBytes);
    }
}
